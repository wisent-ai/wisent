name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for changed files detection
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install ruff
      run: pip install ruff
    
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v41
      with:
        files: |
          **/*.py
    
    - name: Run ruff check on changed files
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        echo "Changed Python files: ${{ steps.changed-files.outputs.all_changed_files }}"
        ruff check ${{ steps.changed-files.outputs.all_changed_files }}
    
    - name: Run ruff format check on changed files  
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        ruff format --check ${{ steps.changed-files.outputs.all_changed_files }}
    
    - name: Auto-fix with ruff (PR only)
      if: github.event_name == 'pull_request' && steps.changed-files.outputs.any_changed == 'true'
      run: |
        ruff check --fix ${{ steps.changed-files.outputs.all_changed_files }}
        ruff format ${{ steps.changed-files.outputs.all_changed_files }}
    
    - name: Commit ruff fixes
      if: github.event_name == 'pull_request' && steps.changed-files.outputs.any_changed == 'true'
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: "ðŸŽ¨ Auto-fix ruff formatting and linting issues"
        file_pattern: "*.py"

  test:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11, 3.12]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest pytest-cov ruff
    
    - name: Run ruff check
      run: |
        ruff check wisent_guard/ --diff
        ruff format wisent_guard/ --check

    - name: Run working tests
      run: |
        # Fast, reliable tests that should pass (explicitly exclude heavy and docker tests)
        pytest -m "not heavy and not model_download and not docker" -v \
          huggingface_llama/test_model.py \
          wisent_guard/tests/core/lm-harness-integration/test_task_extractors.py \
          wisent_guard/tests/core/lm-harness-integration/test_docker_integration.py \
          wisent_guard/tests/core/lm-harness-integration/test_livecodebench_integration.py
        
    - name: Run CLI integration tests (slow)
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        # Only run comprehensive CLI tests on main branch pushes (exclude heavy, model_download, and docker)
        pytest wisent_guard/tests/core/test_benchmark_cli_integration.py -m "not slow and not heavy and not model_download and not docker" -v

  # Optional: Separate job for broken tests that need fixing
  broken-tests:
    runs-on: ubuntu-latest
    continue-on-error: true
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest
    - name: Run tests that need fixing (allowed to fail)
      run: |
        pytest wisent_guard/tests/core/lm-harness-integration/test_task_pipeline.py -v || true
        pytest wisent_guard/tests/core/test_docker_cli_integration.py -v || true  
        pytest wisent_guard/tests/test_vectors.py -v || true

  # Manual heavy tests - only run when specifically triggered
  heavy-tests:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, '[run-heavy]')
    
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest
    - name: Run heavy model download tests
      run: |
        # WARNING: These tests download large models and are very slow
        pytest -m heavy -v --tb=short
      timeout-minutes: 60  # 1 hour timeout for heavy tests