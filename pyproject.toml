[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = ["-v", "--tb=short", "--ignore=evaluation", "-m", "not heavy and not docker"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "heavy: marks tests as very resource-intensive with large model downloads (deselect with '-m \"not heavy\"')",
    "model_download: marks tests that download models from HuggingFace (deselect with '-m \"not model_download\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "docker: marks tests for Docker-based execution",
    "performance: marks tests for performance evaluation",
    "cli: marks tests for CLI integration",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.ruff]
line-length = 120
target-version = "py39"
exclude = [
    ".bzr",
    ".direnv", 
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "evaluation",
    "bigcode-evaluation-harness",
]

[tool.ruff.lint]
# Enable common rule sets
select = ["E4", "E7", "E9", "F", "I", "N", "UP", "B", "A", "C4", "ISC", "ICN", "PIE", "T20", "PT", "Q", "RSE", "RET", "SLF", "SIM", "TCH", "ARG", "ERA", "PGH", "RUF"]
ignore = [
    "PLR0913", # Too many arguments in function definition
    "PLR0912", # Too many branches
    "PLR0915", # Too many statements
    "C901",    # Function is too complex
    "PLR2004", # Magic value used in comparison
    "TRY003",  # Avoid specifying long messages outside exception class
    "PLW2901", # Redefined loop variable
    "B008",    # Do not perform function calls in argument defaults
    "ARG002",  # Unused method argument
    "PIE800",  # Unnecessary spread operator,
    "T201" # print
]
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["wisent_guard"]
force-single-line = false
combine-as-imports = true